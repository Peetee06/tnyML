openapi: 3.0.0
info:
  title: API Specification of tnyML
  version: 1.0.0
  description: API Specification of tnyML
  contact:
    name: Peter Trost
    email: p.trost93@gmail.com
servers:
  - url: /api
    description: The basepath of the API

paths:
  /files:
    post:
      operationId: tnyml.api.files.upload_file
      tags: 
        - Files
      summary: Upload a file
      description: Upload a file
      requestBody:
        description: The file to upload
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200:
          description: File uploaded
        400:
          description: Bad request
        500:
          description: Internal server error
  /files/{file_name}:
    get:
      operationId: tnyml.api.files.get_file
      tags: 
        - Files
      summary: Get a file
      description: Get a file
      parameters:
        - name: file_name
          in: path
          description: Name of the file
          required: true
          schema:
            type: string
      responses:
        200:
          description: File found
        404:
          description: File not found
        500:
          description: Internal server error
  /models:
    get:
      operationId: tnyml.api.models.get_models
      tags: 
        - Models
      summary: Get all models
      description: Get all models
      responses:
        200:
          description: Models found
        500:
          description: Internal server error
  /models/{model_name}:
    post:
      operationId: tnyml.api.models.predict
      tags: 
        - Models
      summary: Predict with a model
      description: Predict with a model
      parameters:
        - name: model_name
          in: path
          description: Name of the model
          required: true
          schema:
            type: string
      requestBody:
        description: The URL to the image to predict with
        content:
          application/json:
            schema:
              type: object
              properties:
                url:
                  type: string
      responses:
        200:
          description: Prediction made
        400:
          description: Bad request
        404:
          description: Model not found
        500:
          description: Internal server error