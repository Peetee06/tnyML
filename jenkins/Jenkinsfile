//Jenkinsfile (Declarative Pipeline)
void setBuildStatus(String message, String state) {
    step([
      $class: 'GitHubCommitStatusSetter',
      reposSource: [$class: 'ManuallyEnteredRepositorySource', url: 'https://github.com/Peetee06/web_engineering_hsbo_SS2022.git'],
      contextSource: [$class: 'ManuallyEnteredCommitContextSource', context: 'ci/jenkins/build-status'],
      errorHandlers: [[$class: 'ChangingBuildStatusErrorHandler', result: 'UNSTABLE']],
      statusResultSource: [ $class: 'ConditionalStatusResultSource', results: [[$class: 'AnyBuildResult', message: message, state: state]] ]
  ])
}

pipeline {
    agent { docker { image 'python:latest' } }
    environment {
        VENV_NAME = 'tests'
        VENV_PATH = "${WORKSPACE}/${VENV_NAME}"
        VENV_BIN_PATH = "${VENV_PATH}/bin/"
    }
    stages {
        stage ('set up venv and dependencies') {
            steps {
                sh './jenkins/setup_dependencies.sh'
            }
        }
        stage('build') {
            steps {
                sh "${VENV_BIN_PATH}python --version"
            }
        }
        stage('python tests') {
            steps {
                sh './jenkins/run_tests.sh'
            }
        }
        //stage('teardown') {
        //    steps {
        //        sh './jenkins/teardown_venv.sh'
        //    }
        //}
    }
    post {
        always {
            sh './jenkins/teardown_venv.sh'
        }
        success {
            setBuildStatus('Build succeeded', 'SUCCESS')
        }
        failure {
            setBuildStatus('Build failed', 'FAILURE')
        }
    }
}
